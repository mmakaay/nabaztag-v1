# Subroutine: @DivMod17()
#
# Compute the DIV + MOD 17 for an input value.
# This case was implemented specifically for supporting the motor encoder
# which increments 17 ticks on every full turn of the related ear.
#
# Input:
#   R0: the value to compute the div and mod 17 for
# Output:
#   R0: the resulting div value
#   R1: the resulting mod value
#
# E.g. input R0=38 output R0=2 R1=4 (because 2*17 + 4 = 38).

@Core.Math.DivMod17()
    push R2
    ld R1 17
    div R0 R1
    ld R2 15
    div R1 R2
    pull last
    rts
