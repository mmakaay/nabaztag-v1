#!/usr/bin/env python3

import sys
import os
from nabaztag.exceptions import NabaztagException
from nabaztag.vasm.preprocessing import Preprocessor
from nabaztag.vasm.parsing import parse
from nabaztag.vasm.bytecoding import ast_to_bytecode
from nabaztag.server.response import Response, BytecodeFrame

if len(sys.argv) != 2:
    print("Usage: %s <vasm file path>" % sys.argv[0])
    sys.exit(1)

name, extension = os.path.splitext(os.path.basename(sys.argv[1]))
file_in = sys.argv[1]
file_out = os.path.join(os.path.dirname(file_in), name + ".bin")

try:
    preprocessed = Preprocessor(file_in).execute()
    ast = parse(preprocessed)
    bytecode = ast_to_bytecode(preprocessed, ast)

    response = Response()
    response.add(BytecodeFrame(bytecode))
    data = response.build()

    with open(file_out, "wb") as f:
        f.write(bytes(data))

except NabaztagException as e:
    print("Exception: %s: %s" % (type(e).__name__, str(e)))
    
